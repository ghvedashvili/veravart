<!DOCTYPE html>
<html lang="ka">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kidsmart Password Game</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Arial', sans-serif;
        }
        
        body {
            background: #f0f8ff;
            color: #333;
            min-height: 100vh;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        
        .container {
            max-width: 600px;
            width: 100%;
            background: white;
            border-radius: 15px;
            padding: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }
        
        h2 {
            text-align: center;
            margin-bottom: 30px;
            font-size: 2.2rem;
            color: #2c3e50;
        }
        
        .password-container {
            margin-bottom: 30px;
        }
        
        #passwordInput {
            width: 100%;
            padding: 15px;
            font-size: 1.2rem;
            border: 3px solid #3498db;
            border-radius: 10px;
            outline: none;
            transition: all 0.3s;
        }
        
        #passwordInput:focus {
            border-color: #e74c3c;
            box-shadow: 0 0 10px rgba(231, 76, 60, 0.3);
        }
        
        .rules-container {
            margin-bottom: 20px;
            min-height: 60px;
        }
        
        .rule {
            margin: 10px 0;
            padding: 7px;
            border-radius: 8px;
            font-size: 0.7rem;
            font-weight: bold;
            transition: all 0.3s ease;
            border-left: 6px solid;
        }
        
        .rule.valid {
            background: #d4f8e8;
            color: #27ae60;
            border-left-color: #2ecc71;
        }
        
        .rule.invalid {
            background: #ffeaea;
            color: #e74c3c;
            border-left-color: #e74c3c;
            animation: pulse 0.5s ease-in-out;
        }
        
        @keyframes pulse {
            0% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            50% { transform: translateX(5px); }
            100% { transform: translateX(0); }
        }
        
        .win-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        
        .win-content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            max-width: 400px;
            width: 90%;
        }
        
        .win-title {
            font-size: 2rem;
            color: #27ae60;
            margin-bottom: 20px;
        }
        
        .win-password {
            font-size: 1.2rem;
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            word-break: break-all;
        }
        
        .copy-btn {
            background: #3498db;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .copy-btn:hover {
            background: #2980b9;
        }
        
        .copy-btn.copied {
            background: #27ae60;
        }
    </style>
</head>
<body>
    <h2>Nickname for Kidsmart</h2>
    
    <div class="container">
        <div class="password-container">
            <input type="text" id="passwordInput" placeholder="·É®·Éî·Éò·Éß·Éï·Éê·Éú·Éî·Éó Nickname">
        </div>
        
        <div class="rules-container" id="rulesContainer">
            <!-- ·É¨·Éî·É°·Éî·Éë·Éò ·Éê·É• ·Éì·Éê·Éò·ÉØ·Éî·Éú·Éî·É†·Éò·É†·Éì·Éî·Éë·Éê JavaScript-·Éò·Éó -->
        </div>
    </div>

    <!-- ·Éí·Éê·Éõ·Éê·É†·ÉØ·Éï·Éî·Éë·Éò·É° ·É§·Éê·Éú·ÉØ·Éê·É†·Éê -->
    <div class="win-modal" id="winModal">
        <div class="win-content">
            <div class="win-title">üéâ ·Éí·Éò·Éö·Éù·É™·Éê·Éï·Éó! üéâ</div>
            <p>·Éó·É•·Éï·Éî·Éú ·É¨·Éê·É†·Éõ·Éê·É¢·Éî·Éë·Éò·Éó ·É®·Éî·É•·Éõ·Éî·Éú·Éò·Éó Nickname!</p>
            <div class="win-password" id="winPassword"></div>
            <button class="copy-btn" onclick="copyPassword()">üìã ·Éô·Éù·Éû·Éò·É†·Éî·Éë·Éê</button>
        </div>
    </div>

    <script>
        // ·Éß·Éï·Éî·Éö·Éê ·É•·Éï·Éî·Éß·Éú·Éò·É° ISO ·Éô·Éù·Éì·Éî·Éë·Éò
        const allCountryCodes = [
            "AF", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ",
            "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", 
            "IO", "BN", "BG", "BF", "BI", "CV", "KH", "CM", "CA", "KY", "CF", "TD", "CL", "CN", "CX", "CC", 
            "CO", "KM", "CD", "CG", "CK", "CR", "HR", "CU", "CW", "CY", "CZ", "CI", "DK", "DJ", "DM", "DO",
            "EC", "EG", "SV", "GQ", "ER", "EE", "SZ", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", 
            "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY",
            "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM",
            "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY",
            "LI", "LT", "LU", "MO", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX",
            "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI",
            "NE", "NG", "NU", "NF", "MK", "MP", "NO", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH",
            "PN", "PL", "PT", "PR", "QA", "RO", "RU", "RW", "RE", "BL", "SH", "KN", "LC", "MF", "PM", "VC",
            "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS",
            "SS", "ES", "LK", "SD", "SR", "SJ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK",
            "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "US", "UM", "UY", "UZ", "VU",
            "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW"
        ];

        // ·É¨·Éî·É°·Éî·Éë·Éò·É° ·Éõ·Éê·É°·Éò·Éï·Éò
        const rules = [
            {
                id: 1,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·Éõ·Éò·Éú·Éò·Éõ·É£·Éõ 5 ·É°·Éò·Éõ·Éë·Éù·Éö·Éù·É°",
                check: (pwd) => pwd.length >= 5
            },
            {
                id: 2,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É†·Éò·É™·ÉÆ·Éï·É°",
                check: (pwd) => /\d/.test(pwd)
            },
            {
                id: 3,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·Éì·Éò·Éì ·Éê·É°·Éù·É°",
                check: (pwd) => /[A-Z]/.test(pwd)
            },
            {
                id: 4,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É°·Éû·Éî·É™·Éò·Éê·Éö·É£·É† ·É°·Éò·Éõ·Éë·Éù·Éö·Éù·É°",
                check: (pwd) => /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(pwd)
            },
            {
                id: 5,
                text: "Nickname ·É†·Éò·É™·ÉÆ·Éï·Éî·Éë·Éò·É° ·ÉØ·Éê·Éõ·Éò ·É£·Éú·Éì·Éê ·Éò·Éß·Éù·É° 35",
                check: (pwd) => {
                    const numbers = pwd.match(/\d/g);
                    if (!numbers) return false;
                    return numbers.reduce((sum, num) => sum + parseInt(num), 0) === 35;
                }
            },
            {
                id: 6,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·Éì·É¶·Éî·Éï·Éê·Éú·Éì·Éî·Éö ·Éì·É¶·Éî·É°",
                check: (pwd) => {
                    const days = ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"];
                    const today = new Date().getDay();
                    return pwd.toUpperCase().includes(days[today]);
                }
            },
            {
                id: 7,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É≠·Éê·Éì·É†·Éê·Éô·Éò·É° ·Éú·Éù·É¢·Éê·É™·Éò·Éê·É° (e4, d5, Nf3)",
                check: (pwd) => /([a-h][1-8]|[NBRQK][a-h][1-8])/i.test(pwd)
            },
            {
                id: 8,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° CAPTCHA-·É°: Eh14TErc",
                check: (pwd) => pwd.includes("Eh14TErc")
            },
            {
                id: 9,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·Éî·Éõ·Éù·ÉØ·Éò·É°",
                check: (pwd) => /[\u{1F300}-\u{1F9FF}]/u.test(pwd)
            },
            {
                id: 10,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É•·Éï·Éî·Éß·Éú·Éò·É° ·Éô·Éù·Éì·É° (·Éú·Éî·Éë·Éò·É°·Éõ·Éò·Éî·É†·Éò ·É•·Éï·Éî·Éß·Éú·Éò·É° ISO ·Éô·Éù·Éì·Éò)",
                check: (pwd) => {
                    const pwdUpper = pwd.toUpperCase();
                    return allCountryCodes.some(country => pwdUpper.includes(country));
                }
            },
            {
                id: 11,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É†·Éù·Éõ·Éê·É£·Éö ·É™·Éò·É§·É†·É° (·Éõ·Éò·Éú·Éò·Éõ·É£·Éõ 3 ·É°·Éò·Éõ·Éë·Éù·Éö·Éù)",
                check: (pwd) => /[IVXLCDM]{3,}/i.test(pwd)
            },
            {
                id: 12,
                text: "Nickname·É° ·É°·Éò·Éí·É†·É´·Éî ·É£·Éú·Éì·Éê ·Éò·Éß·Éù·É° ·Éõ·Éò·Éú·Éò·Éõ·É£·Éõ 18 ·É°·Éò·Éõ·Éë·Éù·Éö·Éù",
                check: (pwd) => pwd.length >= 18
            },
            {
                id: 13,
                text: "·Éß·Éù·Éï·Éî·Éö·Éò ·Éõ·Éî-4 ·Éê·É°·Éù ·É£·Éú·Éì·Éê ·Éò·Éß·Éù·É° ·Éì·Éò·Éì·Éò",
                check: (pwd) => {
                    const letters = pwd.replace(/[^a-zA-Z]/g, '');
                    if (letters.length < 4) return false;
                    for (let i = 3; i < letters.length; i += 4) {
                        if (letters[i] !== letters[i].toUpperCase()) return false;
                    }
                    return true;
                }
            },
            {
                id: 14,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° 2 ·ÉÆ·Éõ·Éù·Éï·Éê·Éú·É° ·Éñ·Éî·Éì·Éò·Éñ·Éî·Éì",
                check: (pwd) => /[aeiouAEIOU]{2,}/.test(pwd)
            },
            {
                id: 15,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É¨·Éò·Éö·Éê·Éì·É°",
                check: (pwd) => /\d+\/\d+/.test(pwd)
            },
            {
                id: 16,
                text: "Nickname ·Éê·É† ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É•·Éê·É†·Éó·É£·Éö ·Éê·É°·Éù·Éî·Éë·É°",
                check: (pwd) => !/[·Éê-·É∞]/.test(pwd)
            },
            {
                id: 17,
                text: "Nickname ·Éê·É† ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·Éî·É†·Éó·É°·Éê ·Éì·Éê ·Éò·Éõ·Éê·Éï·Éî ·É°·Éò·Éõ·Éë·Éù·Éö·Éù·É° 3-·Éñ·Éî ·Éõ·Éî·É¢·ÉØ·Éî·É†",
                check: (pwd) => {
                    for (let i = 0; i < pwd.length - 2; i++) {
                        if (pwd[i] === pwd[i+1] && pwd[i] === pwd[i+2]) {
                            return false;
                        }
                    }
                    return true;
                }
            },
            {
                id: 18,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É¢·Éî·Éõ·Éû·Éî·É†·Éê·É¢·É£·É†·Éê·É° (-375¬∞C-·Éì·Éê·Éú 10000¬∞C-·Éõ·Éì·Éî ·Éê·Éú ¬∞F)",
                check: (pwd) => {
                    const tempRegex = /-?\d{1,5}¬∞[CF]/;
                    const match = pwd.match(tempRegex);
                    if (!match) return false;
                    return true;
                }
            },
            {
                id: 19,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É•·Éò·Éõ·Éò·É£·É†·Éò ·Éú·Éê·Éî·É†·Éó·Éò·É° ·Éô·Éù·Éì·É°",
                check: (pwd) => {
                    const compounds = ["H2O", "CO2", "NaCl", "NH3", "CH4", "H2SO4", "NaOH", "HCl"];
                    return compounds.some(compound => pwd.includes(compound));
                }
            },
            {
                id: 20,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·Éõ·Éê·Éó·Éî·Éõ·Éê·É¢·Éò·Éô·É£·É† ·Éù·Éû·Éî·É†·Éê·É¢·Éù·É†·É°",
                check: (pwd) => /[+\-*/^=]/.test(pwd)
            },
            {
                id: 21,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É§·Éî·É†·Éò·É° ·É°·Éê·ÉÆ·Éî·Éö·É° hex ·É§·Éù·É†·Éõ·Éê·É¢·É®·Éò (#RRGGBB)",
                check: (pwd) => /#[0-9A-Fa-f]{6}/.test(pwd)
            },
            {
                id: 22,
                text: "Nickname-·É®·Éò ·Éê·É† ·É£·Éú·Éì·Éê ·Éò·Éß·Éù·É° '41'",
                check: (pwd) => !pwd.includes("41")
            },
            
            {
                id: 24,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ASCII ·É°·Éê·ÉÆ·Éî·É° (:, ;), <3)",
                check: (pwd) => {
                    const faces = [":)", ";)", ":D", ":(", ":'(", ":'", "<3", ":/"];
                    return faces.some(face => pwd.includes(face));
                }
            },
            {
                id: 25,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° 20 ·Éñ·Éî ·Éõ·Éî·É¢ ·Éõ·Éê·É†·É¢·Éò·Éï ·É†·Éò·É™·ÉÆ·Éï·É°",
                check: (pwd) => {
                    const primes = [ "23", "29", "31", "37", "41", "43", "47", "53", "59", "61", "67", "71", "73", "79", "83", "89", "97"];
                    return primes.some(prime => pwd.includes(prime));
                }
            },
            {
                id: 26,
                text: "Nickname ·É£·Éú·Éì·Éê ·É®·Éî·Éò·É™·Éê·Éï·Éì·Éî·É° ·É™·Éò·É§·É†·É£·Éö ·Éì·É†·Éù·É° (12:34, 23:59)",
                check: (pwd) => {
                    const timeRegex = /([01]?[0-9]|2[0-3]):[0-5][0-9]/;
                    return timeRegex.test(pwd);
                }
            },
            {
                id: 33,
                text: "Nickname ·Éê·Éô·É†·É´·Éê·Éö·É£·Éö·Éò·Éê ·Éô·Éù·Éì·Éò RU",
                check: (pwd) => !pwd.toUpperCase().includes("RU")
            },
            {
                id: 34,
                text: "Nickname ·Éô·Éî·Éú·É¢·Éò ·Éì·Éê ·Éö·É£·É¨·Éò ·É™·Éò·É§·É†·Éî·Éë·Éò ·É£·Éú·Éì·Éê ·Éò·Éß·Éù·É° ·Éó·Éê·Éú·Éê·Éë·Éê·É†·Éò ·É†·Éê·Éù·Éì·Éî·Éú·Éù·Éë·Éò·É°",
                check: (pwd) => {
                    const numbers = pwd.match(/\d/g);
                    if (!numbers) return false;
                    const evenCount = numbers.filter(num => parseInt(num) % 2 === 0).length;
                    const oddCount = numbers.filter(num => parseInt(num) % 2 !== 0).length;
                    return evenCount === oddCount;
                }
            },
            {
                id: 35,
                text: "Nickname-·É®·Éò ·É™·Éò·É§·É†·Éî·Éë·Éò·É° ·Éú·Éê·Éõ·É†·Éê·Éï·Éö·Éò 0-·Éñ·Éî ·Éõ·Éî·É¢·Éò ·É£·Éú·Éì·Éê ·Éò·Éß·Éù·É°",
                check: (pwd) => {
                    const numbers = pwd.match(/\d/g);
                    if (!numbers || numbers.length === 0) return false;
                    return numbers.reduce((product, num) => product * parseInt(num), 1) > 0;
                }
            }
        ];

        // DOM ·Éî·Éö·Éî·Éõ·Éî·Éú·É¢·Éî·Éë·Éò
        const passwordInput = document.getElementById('passwordInput');
        const rulesContainer = document.getElementById('rulesContainer');
        const winModal = document.getElementById('winModal');
        const winPassword = document.getElementById('winPassword');

        // ·Éò·Éú·Éò·É™·Éò·Éê·Éö·Éò·Éñ·Éê·É™·Éò·Éê
        let allRules = [...rules];
        let activeRules = [allRules[0]]; // ·Éõ·ÉÆ·Éù·Éö·Éù·Éì ·Éû·Éò·É†·Éï·Éî·Éö·Éò ·É¨·Éî·É°·Éò
        let completedRules = new Set();

        // Copy-Paste-Cut ·Éë·Éö·Éù·Éô·Éò·É†·Éî·Éë·Éê
        passwordInput.addEventListener('copy', (e) => {
            e.preventDefault();
            alert('Copy ·Éê·Éô·É†·É´·Éê·Éö·É£·Éö·Éò·Éê! ·Éó·É•·Éï·Éî·Éú ·É£·Éú·Éì·Éê ·Éó·Éê·Éï·Éê·Éì ·Éê·Éô·É†·Éò·É§·Éù·Éó ·Éû·Éê·É†·Éù·Éö·Éò.');
        });

        passwordInput.addEventListener('paste', (e) => {
            e.preventDefault();
            alert('Paste ·Éê·Éô·É†·É´·Éê·Éö·É£·Éö·Éò·Éê! ·Éó·É•·Éï·Éî·Éú ·É£·Éú·Éì·Éê ·Éó·Éê·Éï·Éê·Éì ·Éê·Éô·É†·Éò·É§·Éù·Éó ·Éû·Éê·É†·Éù·Éö·Éò.');
        });

        passwordInput.addEventListener('cut', (e) => {
            e.preventDefault();
            alert('Cut ·Éê·Éô·É†·É´·Éê·Éö·É£·Éö·Éò·Éê!');
        });

        // ·Éô·Éù·Éû·Éò·É†·Éî·Éë·Éò·É° ·É§·É£·Éú·É•·É™·Éò·Éê
        function copyPassword() {
            const password = passwordInput.value;
            navigator.clipboard.writeText(password).then(() => {
                const copyBtn = document.querySelector('.copy-btn');
                copyBtn.textContent = '‚úÖ ·Éô·Éù·Éû·Éò·É†·Éî·Éë·É£·Éö·Éò!';
                copyBtn.classList.add('copied');
                setTimeout(() => {
                    copyBtn.textContent = 'üìã ·Éô·Éù·Éû·Éò·É†·Éî·Éë·Éê';
                    copyBtn.classList.remove('copied');
                }, 2000);
            });
        }

        // ·Éí·Éê·Éõ·Éê·É†·ÉØ·Éï·Éî·Éë·Éò·É° ·É®·Éî·Éõ·Éù·É¨·Éõ·Éî·Éë·Éê
        function checkWin(password) {
            return allRules.every(rule => rule.check(password));
        }

        // ·Éí·Éê·Éõ·Éê·É†·ÉØ·Éï·Éî·Éë·Éò·É° ·É§·Éê·Éú·ÉØ·É†·Éò·É° ·É©·Éï·Éî·Éú·Éî·Éë·Éê
        function showWinModal() {
            winPassword.textContent = passwordInput.value;
            winModal.style.display = 'flex';
        }

        // ·É¨·Éî·É°·Éî·Éë·Éò·É° ·Éì·Éê·Éõ·Éê·É¢·Éî·Éë·Éê DOM-·É®·Éò
        function renderRules() {
            rulesContainer.innerHTML = '';
            
            const password = passwordInput.value;
            
            // ·Éì·Éê·Éï·Éê·Éö·Éê·Éí·Éù·Éó ·É¨·Éî·É°·Éî·Éë·Éò: ·ÉØ·Éî·É† ·É®·Éî·É£·É°·É†·É£·Éö·Éî·Éë·Éî·Éö·Éò, ·É®·Éî·Éõ·Éì·Éî·Éí ·É®·Éî·É°·É†·É£·Éö·Éî·Éë·É£·Éö·Éò
            const sortedRules = [...activeRules].sort((a, b) => {
                const aValid = a.check(password);
                const bValid = b.check(password);
                if (!aValid && bValid) return -1; // a (·É®·Éî·É£·É°·É†·É£·Éö·Éî·Éë·Éî·Éö·Éò) ·Éñ·Éî·Éï·Éò·Éó
                if (aValid && !bValid) return 1;  // b (·É®·Éî·É£·É°·É†·É£·Éö·Éî·Éë·Éî·Éö·Éò) ·Éñ·Éî·Éï·Éò·Éó
                return a.id - b.id; // ·Éò·Éí·Éò·Éï·Éî ·É°·É¢·Éê·É¢·É£·É°·Éò - ·Éó·Éê·Éú·Éõ·Éò·Éõ·Éì·Éî·Éï·É†·Éù·Éë·Éò·Éó
            });
            
            // ·Éõ·ÉÆ·Éù·Éö·Éù·Éì ·Éê·É•·É¢·Éò·É£·É†·Éò ·É¨·Éî·É°·Éî·Éë·Éò·É° ·É©·Éï·Éî·Éú·Éî·Éë·Éê
            sortedRules.forEach(rule => {
                const ruleElement = document.createElement('div');
                const isValid = rule.check(password);
                ruleElement.className = `rule ${isValid ? 'valid' : 'invalid'}`;
                ruleElement.textContent = rule.text;
                rulesContainer.appendChild(ruleElement);
            });
            
            // ·Éí·Éê·Éõ·Éê·É†·ÉØ·Éï·Éî·Éë·Éò·É° ·É®·Éî·Éõ·Éù·É¨·Éõ·Éî·Éë·Éê
            if (checkWin(password)) {
                showWinModal();
            }
        }

        // ·Éû·Éê·É†·Éù·Éö·Éò·É° ·É®·Éî·Éõ·Éù·É¨·Éõ·Éî·Éë·Éê
        function checkPassword() {
            const password = passwordInput.value;
            
            // ·Éí·Éê·Éú·Éï·Éê·Éê·ÉÆ·Éö·Éù·Éó ·Éì·Éê·É°·É†·É£·Éö·Éî·Éë·É£·Éö·Éò ·É¨·Éî·É°·Éî·Éë·Éò
            allRules.forEach(rule => {
                if (rule.check(password)) {
                    completedRules.add(rule.id);
                } else {
                    completedRules.delete(rule.id);
                }
            });
            
            // ·Éõ·Éò·Éõ·Éì·Éò·Éú·Éê·É†·Éî ·Éê·É•·É¢·Éò·É£·É†·Éò ·É¨·Éî·É°·Éî·Éë·Éò·É° ·É®·Éî·Éõ·Éù·É¨·Éõ·Éî·Éë·Éê
            let allActiveRulesCompleted = activeRules.every(rule => rule.check(password));
            
            // ·Éó·É£ ·Éß·Éï·Éî·Éö·Éê ·Éê·É•·É¢·Éò·É£·É†·Éò ·É¨·Éî·É°·Éò ·Éì·Éê·É°·É†·É£·Éö·Éî·Éë·É£·Éö·Éò·Éê, ·Éõ·Éù·Éï·É´·Éî·Éë·Éú·Éù·Éó ·É®·Éî·Éõ·Éì·Éî·Éí·Éò ·É®·Éî·É£·É°·É†·É£·Éö·Éî·Éë·Éî·Éö·Éò ·É¨·Éî·É°·Éò
            if (allActiveRulesCompleted) {
                const nextRule = allRules.find(rule => 
                    !activeRules.includes(rule) && !rule.check(password)
                );
                if (nextRule) {
                    activeRules.push(nextRule);
                }
            }
            
            renderRules();
        }

        // ·Éê·Éï·É¢·Éù·Éõ·Éê·É¢·É£·É†·Éò ·É°·É£·Éë·Éõ·Éò·É¢·Éò ·Éß·Éù·Éï·Éî·Éö·Éò ·É™·Éï·Éö·Éò·Éö·Éî·Éë·Éò·É°·Éê·É°
        passwordInput.addEventListener('input', function() {
            checkPassword();
        });

        // ·Éó·Éê·Éõ·Éê·É®·Éò·É° ·Éì·Éê·É¨·Éß·Éî·Éë·Éê
        renderRules();
    </script>
</body>
</html>
